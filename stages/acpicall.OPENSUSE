KERNEL_TYPE=`uname -r | cut -f3 -d"-"`

INSTALLED=`zypper --no-refresh info kernel-$KERNEL_TYPE-devel | grep Installed: | cut -f2 -d' '`
if [ "$INSTALLED" != "Yes" ] ; then
  echo "Do you want me to install the kernel-devel and kernel-$KERNEL_TYPE-devel packages"
  echo "needed for the acpi_call build (y/n) ?"
  read answer
  case "$answer" in
  y|Y)
    if [ "$INSTALLED" != "Yes" ] ; then
      zypper install kernel-$KERNEL_TYPE-devel
      if [ $? -ne 0 ]; then
	echo
	echo "Package manager failed to install needed packages..."
	echo
	exit 21
      fi
    fi
    zypper update
  ;;
  n|N)
    echo "Packages will NOT be installed."
  ;;
  *)
  ;;
  esac
fi

INSTALLED=`zypper --no-refresh info gcc | grep Installed: | cut -f2 -d' '`
if [ "$INSTALLED" != "Yes" ] ; then
  echo "Do you want me to install the git, make and gcc packages"
  echo "needed for the acpi_call build (y/n) ?"
  read answer
  case "$answer" in
  y|Y)
    if [ "$INSTALLED" != "Yes" ] ; then
      zypper install git-core make gcc
      if [ $? -ne 0 ]; then
	echo
	echo "Package manager failed to install needed packages..."
	echo
	exit 21
      fi
    fi
    zypper update
  ;;
  n|N)
    echo "Packages will NOT be installed."
  ;;
  *)
  ;;
  esac
fi

INSTALLED=`zypper --no-refresh info dkms | grep Installed: | cut -f2 -d' '`
if [ "$INSTALLED" != "Yes" ] ; then
  echo "Do you want me to install the dkms package needed for the acpi_call build (y/n) ?"
  read answer
  case "$answer" in
  y|Y)
    VERSION=`cat /etc/SuSE-release | grep VERSION | cut -f3 -d" "`
    zypper --plus-repo http://packman.inode.at/suse/openSUSE_$VERSION/Extra install dkms
    if [ $? -ne 0 ]; then
      echo
      echo "Package manager failed to install needed package..."
      echo
      exit 21
    fi
    zypper update
  ;;
  n|N)
    echo "Package will NOT be installed."
  ;;
  *)
  ;;
  esac
fi

ACPICALLVERSION=1.0

if [ `dkms status |grep acpi_call | wc -l` -gt 0 ]; then
 echo 
 echo "acpi_call module already installed, do you want to update/reinstall? (y/n)"
 echo
 read answer

 case "$answer" in
  y | Y )
   dkms uninstall -m acpi_call -v `dkms status |grep acpi_call |cut -f2 -d, |cut -f1 -d:`   
   dkms remove -m acpi_call -v `dkms status |grep acpi_call |cut -f2 -d, |cut -f1 -d:` --all
   rm -rf /usr/src/acpi_call*
   cd /tmp
   git clone http://github.com/mkottman/acpi_call.git
   mv acpi_call /usr/src/acpi_call-$ACPICALLVERSION

   echo 'PACKAGE_NAME="acpi_call"
   PACKAGE_VERSION="'$ACPICALLVERSION'"
   CLEAN="make clean"
   BUILT_MODULE_NAME[0]="acpi_call"
   DEST_MODULE_NAME[0]="acpi_call"
   MAKE[0]="make IGNORE_CC_MISMATCH=1 KDIR=$kernel_source_dir
   PWD=$dkms_tree/acpi_call/1.0/build" 
   DEST_MODULE_LOCATION[0]="/updates/dkms/"
   AUTOINSTALL="yes"' > /usr/src/acpi_call-$ACPICALLVERSION/dkms.conf

   dkms add -m acpi_call -v $ACPICALLVERSION
   dkms build -m acpi_call -v $ACPICALLVERSION
   dkms install -m acpi_call -v $ACPICALLVERSION

   cd "$BUMBLEBEEPWD"
  ;;

  *)
  
  ;;
 esac 
else

 rm -rf /usr/src/acpi_call*
 cd /tmp
 git clone http://github.com/mkottman/acpi_call.git
 mv acpi_call /usr/src/acpi_call-$ACPICALLVERSION

 echo 'PACKAGE_NAME="acpi_call"
 PACKAGE_VERSION="'$ACPICALLVERSION'"
 CLEAN="make clean"
 BUILT_MODULE_NAME[0]="acpi_call"
 DEST_MODULE_NAME[0]="acpi_call"
 MAKE[0]="make IGNORE_CC_MISMATCH=1 KDIR=$kernel_source_dir
 PWD=$dkms_tree/acpi_call/1.0/build"
 DEST_MODULE_LOCATION[0]="/updates/dkms/"
 AUTOINSTALL="yes"' > /usr/src/acpi_call-$ACPICALLVERSION/dkms.conf

 dkms add -m acpi_call -v $ACPICALLVERSION
 dkms build -m acpi_call -v $ACPICALLVERSION
 dkms install -m acpi_call -v $ACPICALLVERSION

 cd "$BUMBLEBEEPWD"
fi
